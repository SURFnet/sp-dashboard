<?xml version="1.0"?>
<ruleset name="Ibuildings QA Tools Standard Wrapper">
    <description>
        This is used by the Ibuildings QA tools to wrap the coding standard of your choice.
        By default it is less stringent about long lines than other coding standards
    </description>

    <exclude-pattern>src/*/*Bundle/Resources</exclude-pattern>
    <exclude-pattern>src/*/Bundle/*Bundle/Resources</exclude-pattern>

    <!-- This is the rule we inherit from. If you want to exlude some specific rules, see the docs on how to do that -->
    <rule ref="PSR2" />

    <!-- Include some choice rules from Doctrine -->
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>
    <!-- Forbid empty comments -->
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
    <!-- Forbid useless comments -->
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments">
        <properties>
            <property name="forbiddenCommentPatterns" type="array">
                <element value="~^(?:(?!private|protected|static)\S+ )?(?:con|de)structor\.\z~i"/>
                <element value="~^Created by .+\.\z~i"/>
                <element value="~^(User|Date|Time): \S+\z~i"/>
                <element value="~^\S+ [gs]etter\.\z~i"/>
                <element value="~^(Class|Interface|Trait) \S+\z~i"/>
            </property>
        </properties>
    </rule>
    <!-- Forbid empty statements -->
    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <!-- But allow empty catch -->
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch"/>
    </rule>
    <!-- Lines can be a little bit longer before they break the build -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120" />
            <property name="absoluteLineLimit" value="150"/>
        </properties>
    </rule>
</ruleset>
