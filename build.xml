<?xml version="1.0" encoding="UTF-8"?>
<project name="SURFnet Service Provider Dashboard" default="test">
    <target name="test" depends="lint,static-analysis,phpunit-no-coverage,jest,security-tests" />

    <target name="lint">
        <echo message="parallel-lint:" />
        <exec executable="vendor/bin/parallel-lint" failonerror="true">
            <arg path="app" />
            <arg path="src" />
            <arg path="tests" />
            <arg path="web" />
        </exec>

        <echo message="${line.separator}yamllint:" />
        <exec executable="bin/console" failonerror="true">
            <arg line="lint:yaml" />
            <arg path="app/config" />
        </exec>

        <echo message="${line.separator}composer validate:" />
        <exec executable="composer" failonerror="true">
            <arg line="validate" />
        </exec>

        <echo message="${line.separator}tslint:" />
        <exec executable="node_modules/tslint/bin/tslint" failonerror="true">
            <arg line="--project tsconfig.json" />
        </exec>

        <echo message="${line.separator}stylelint:" />
        <exec executable="node_modules/stylelint/bin/stylelint.js" failonerror="true">
            <arg line="app/scss/**/*.scss" />
            <arg line="-f unix" />
        </exec>

    </target>

    <target name="static-analysis">

        <echo message="docheader:" />
        <exec executable="vendor/bin/docheader" failonerror="true">
            <arg line="check src/ tests/" />
        </exec>

        <echo message="${line.separator}phpmd:" />
        <exec executable="vendor/bin/phpmd" failonerror="true">
            <arg path="src" />
            <arg value="text" />
            <arg path="phpmd.xml" />
        </exec>

        <echo message="${line.separator}phpcs:" />
        <exec executable="vendor/bin/phpcs" failonerror="true">
            <arg line="--runtime-set ignore_warnings_on_exit 1" />
            <arg line="--standard=phpcs.xml" />
            <arg line="--error-severity=1" />
            <arg line="--warning-severity=6" />
            <arg path="src" />
        </exec>

        <echo message="${line.separator}phpcs for tests:" />
        <exec executable="vendor/bin/phpcs" failonerror="true">
            <arg line="--runtime-set ignore_warnings_on_exit 1" />
            <arg line="--standard=phpcs_tests.xml" />
            <arg line="--error-severity=1" />
            <arg line="--warning-severity=6" />
            <arg path="tests" />
        </exec>

        <echo message="${line.separator}attribute-scheme-validation"/>
        <exec executable="node_modules/.bin/ajv" failonerror="true">
            <arg line="compile -s app/Resources/schemas/attributes.scheme.json" />
        </exec>

        <echo message="${line.separator}attribute-data-validation"/>
        <exec executable="node_modules/.bin/ajv" failonerror="true">
            <arg line="validate -s app/Resources/schemas/attributes.scheme.json -d app/config/attributes.json" />
        </exec>

        <echo message="${line.separator}phpcpd:" />
        <exec executable="vendor/bin/phpcpd" failonerror="false">
            <arg path="src" />
        </exec>
    </target>

    <target name="phpunit-no-coverage" depends="unit-tests-no-coverage,integration-tests-no-coverage,web-tests-no-coverage" />

    <target name="phpunit" depends="unit-tests,integration-tests,web-tests,merge-coverage" />

    <target name="create-test-db">
        <exec executable="bin/console" failonerror="true">
            <arg line="doctrine:schema:drop --force --env=test" />
        </exec>
        <exec executable="bin/console" failonerror="true">
            <arg line="doctrine:schema:create --env=test" />
        </exec>
    </target>

    <target name="create-coverage-dir">
        <exec executable="mkdir" failonerror="true">
            <arg line="-p /tmp/sp-dashboard-coverage" />
        </exec>
    </target>

    <target name="merge-coverage">
        <exec executable="vendor/bin/phpcov" failonerror="true">
            <arg line="merge /tmp/sp-dashboard-coverage --html web/coverage" />
        </exec>
    </target>

    <target name="unit-tests-no-coverage">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--testsuite unit" />
        </exec>
    </target>

    <target name="integration-tests-no-coverage">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--testsuite integration" />
        </exec>
    </target>

    <target name="web-tests-no-coverage" depends="create-test-db">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--testsuite webtests" />
        </exec>
    </target>

    <target name="unit-tests" depends="create-coverage-dir">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--testsuite unit" />
            <arg line="--coverage-php /tmp/sp-dashboard-coverage/unit.cov" />
        </exec>
    </target>

    <target name="integration-tests" depends="create-coverage-dir">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--testsuite integration" />
            <arg line="--coverage-php /tmp/sp-dashboard-coverage/integration.cov" />
        </exec>
    </target>

    <target name="web-tests" depends="create-coverage-dir,create-test-db">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--testsuite webtests" />
            <arg line="--coverage-php /tmp/sp-dashboard-coverage/webtests.cov" />
        </exec>
    </target>

    <target name="jest">
        <exec executable="node_modules/jest/bin/jest.js" failonerror="true">
            <arg line="--passWithNoTests" />
        </exec>
    </target>

    <target name="security-tests">
        <exec executable="bin/securityChecker.sh" failonerror="true"></exec>

        <exec executable="yarn" failonerror="false">
            <arg line="audit" />
        </exec>
    </target>

    <target name="import-translations">
        <exec executable="bin/console" failonerror="true">
            <arg line="lexik:translations:import" />
        </exec>
        <exec executable="bin/console" failonerror="true">
            <arg line="lexik:translations:import DashboardBundle" />
        </exec>
        <exec executable="bin/console" failonerror="true">
            <arg line="lexik:translations:import DashboardSamlBundle" />
        </exec>
    </target>
</project>
