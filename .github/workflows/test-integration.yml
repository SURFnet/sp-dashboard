name: Run integration tests

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    # Due to the cgroups 1 issue on the openconext container, we do not
    # use the new ubuntu platform yet. As they started using cgroups v2
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DOCKER_COMPOSE: docker compose -f docker-compose.yml
      DOCKER_COMPOSE_PHP: docker compose -f docker-compose.yml exec -T spdashboard
      DOCKER_COMPOSE_CYPRESS: docker compose -f docker-compose.yml exec -T cypress
      DOCKER_RUN_SPD_AS_WWW: docker compose -f docker-compose.yml exec --user 33:33 spdashboard

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          path: spdashboard

      - name: Checkout openconext-devconf
        uses: actions/checkout@v4
        with:
          repository: OpenConext/OpenConext-devconf
          ref: main
          path: OpenConext-devconf
          sparse-checkout: core

      - name: Bootstrap the openconext environment
        working-directory: OpenConext-devconf/core
        run: ./scripts/init.sh

      - name: Start the docker images for testing
        working-directory: spdashboard
        run: ${DOCKER_COMPOSE} up -d mariadb spdashboard cypress

      - name: Instantiate the env file
        run: cp spdashboard/.env.dist spdashboard/.env

      - name: Import the certificate on the Cypress docker machine
        working-directory: spdashboard
        run: ${DOCKER_COMPOSE_CYPRESS} sh /e2e/docker/conf/cypress_import_cert.sh

      - name: Run composer
        working-directory: spdashboard
        run: |
          ${DOCKER_COMPOSE_PHP} /usr/bin/composer install -n --prefer-dist -o --ignore-platform-reqs

      - name: Run yarn
        working-directory: spdashboard
        run: |
          ${DOCKER_COMPOSE_PHP} yarn install

      - name: Create front end dependencies (yarn encore production)
        working-directory: spdashboard
        run: |
          ${DOCKER_COMPOSE_PHP} yarn run encore production

      - name: Delete the database if present
        working-directory: spdashboard
        run: |
          ${DOCKER_COMPOSE_PHP} rm -f /tmp/spdashboard-webtests.sqlite

      - name: Get the database up and running
        working-directory: spdashboard
        run: |
          ${DOCKER_RUN_SPD_AS_WWW} bin/console doctrine:schema:create
        env:
          APP_ENV: test

      - name: Run Copy Paste Detector
        working-directory: spdashboard
        run: |
          ${DOCKER_COMPOSE_PHP} sh -c 'composer jscpd'
        continue-on-error: true

      - name: Run CI tests
        working-directory: spdashboard
        run: |
          ${DOCKER_COMPOSE_PHP} sh -c 'composer check'

      - name: Run JS tests
        working-directory: spdashboard
        run: |
          ${DOCKER_COMPOSE_PHP} sh -c 'composer jest'

      - name: Run Cypress tests
        working-directory: spdashboard
        run: |
          ${DOCKER_COMPOSE_CYPRESS} cypress run --browser chrome -C ./ci/qa/cypress.config.ts
        continue-on-error: true
