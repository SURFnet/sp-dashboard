services:
    _defaults:
        autowire: true
        autoconfigure: true

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Security\Voter\:
        resource: '../../Security/Voter'
        tags: ['security.voter']

    surfnet.dashboard.middleware.doctrine_transaction:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Middleware\DoctrineTransactionMiddleware

    surfnet.dashboard.command_handler.create_service:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Service\CreateServiceCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Service\CreateServiceCommand }

    surfnet.dashboard.command_handler.delete_service:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Service\DeleteServiceCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Service\DeleteServiceCommand }

    surfnet.dashboard.command_handler.delete_published_production_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\DeletePublishedProductionEntityCommandHandler
        arguments:
            - '@surfnet.manage.client.delete_client.prod_environment'
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\DeletePublishedProductionEntityCommand }

    surfnet.dashboard.command_handler.delete_published_test_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\DeletePublishedTestEntityCommandHandler
        arguments:
            - '@surfnet.manage.client.delete_client.test_environment'
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\DeletePublishedTestEntityCommand }

    surfnet.dashboard.command_handler.request_delete_published_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\RequestDeletePublishedEntityCommandHandler
        arguments:
            - '@surfnet.manage.client.query_client.prod_environment'
            - '%jira_issue_type%'
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\RequestDeletePublishedEntityCommand }

    surfnet.dashboard.command_handler.edit_saml_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\SaveSamlEntityCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\SaveSamlEntityCommand }

    surfnet.dashboard.command_handler.edit_oidcng_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\SaveOidcngEntityCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\SaveOidcngEntityCommand }

    surfnet.dashboard.command_handler.edit_oidcng_rs_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\SaveOidcngResourceServerEntityCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\SaveOidcngResourceServerEntityCommand }

    surfnet.dashboard.command_handler.edit_service:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Service\EditServiceCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Service\EditServiceCommand }

    surfnet.dashboard.command_handler.load_metadata:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\LoadMetadataCommandHandler
        public: true
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Legacy\Metadata\Fetcher'
            - '@Surfnet\ServiceProviderDashboard\Legacy\Metadata\Parser'
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\LoadMetadataCommand }

    surfnet.dashboard.command_handler.privacy_questions:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\PrivacyQuestions\PrivacyQuestionsCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\PrivacyQuestions\PrivacyQuestionsCommand }

    surfnet.dashboard.command_handler.publish_test_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\PublishEntityTestCommandHandler
        arguments:
            $publishClient: '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\PublishEntityClient'

        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\PublishEntityTestCommand }

    surfnet.dashboard.command_handler.publish_production_entity:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\PublishEntityProductionCommandHandler
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\EntityRepository'
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\ServiceRepository'
            - '@surfnet.manage.client.publish_client.prod_environment'
            - '@Surfnet\ServiceProviderDashboard\Application\Service\TicketService'
            - '@session.flash_bag'
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Factory\MailMessageFactory'
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Mailer\Mailer'
            - '@logger'
            - '%jira_issue_type_publication_request%'
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\PublishEntityProductionCommand }
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\PublishEntityProductionAfterClientResetCommand }

    surfnet.dashboard.command_handler.push_metadata:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\PushMetadataCommandHandler
        arguments:
            - '@surfnet.manage.publish_service'
            - '@session.flash_bag'
            - '@logger'
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\PushMetadataCommand }

    surfnet.dashboard.command_handler.update_entity_acl:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\UpdateEntityAclCommandHandler
        arguments:
            $publishClient: '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\PublishEntityClient'
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\UpdateEntityAclCommand }


    surfnet.dashboard.command_handler.reset_oidc_secret:
        class: Surfnet\ServiceProviderDashboard\Application\CommandHandler\Entity\ResetOidcSecretCommandHandler
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\EntityRepository'
            - '@Surfnet\ServiceProviderDashboard\Application\Service\LoadEntityService'
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Application\Command\Entity\ResetOidcSecretCommand }

    surfnet.dashboard.command_handler.reset_service:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\CommandHandler\Service\ResetServiceCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Command\Service\ResetServiceCommand }

    surfnet.dashboard.command_handler.select_service:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\CommandHandler\Service\SelectServiceCommandHandler
        public: true
        tags:
            - { name: tactician.handler, command: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Command\Service\SelectServiceCommand }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Mailer\Mailer:
        arguments: ['@mailer']

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Factory\MailMessageFactory:
        arguments:
            - '%mail_from%'
            - '%mail_receiver%'
            - '%mail_no_reply%'
            - '@translator'
            - '@templating'


    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: main }

    Surfnet\ServiceProviderDashboard\Legacy\Metadata\CertificateParser:
        class: Surfnet\ServiceProviderDashboard\Legacy\Metadata\CertificateParser

    surfnet.dashboard.metadata.client:
        class: GuzzleHttp\Client

    Surfnet\ServiceProviderDashboard\Legacy\Metadata\Fetcher:
        arguments: ['@surfnet.dashboard.metadata.client', '@logger', '%metadata_url_timeout%']


    Surfnet\ServiceProviderDashboard\Application\Metadata\JsonGeneratorStrategy:
        class: Surfnet\ServiceProviderDashboard\Application\Metadata\JsonGeneratorStrategy

    Surfnet\ServiceProviderDashboard\Application\Metadata\JsonGenerator:
        class: Surfnet\ServiceProviderDashboard\Application\Metadata\JsonGenerator
        arguments:
            $oidcPlaygroundUriTest: '%playground_uri_test%'
            $oidcPlaygroundUriProd: '%playground_uri_prod%'
        tags:
            - { name: dashboard.json_generator, identifier: saml20 }
            - { name: dashboard.json_generator, identifier: oidc }

    Surfnet\ServiceProviderDashboard\Application\Metadata\OidcngJsonGenerator:
        class: Surfnet\ServiceProviderDashboard\Application\Metadata\OidcngJsonGenerator
        tags:
            - { name: dashboard.json_generator, identifier: oidcng }
        arguments:
            $oidcPlaygroundUriTest: '%oidcng_playground_uri_test%'
            $oidcPlaygroundUriProd: '%oidcng_playground_uri_prod%'

    Surfnet\ServiceProviderDashboard\Application\Metadata\OidcngResourceServerJsonGenerator:
        class: Surfnet\ServiceProviderDashboard\Application\Metadata\OidcngResourceServerJsonGenerator
        tags:
            - { name: dashboard.json_generator, identifier: oidcng_rs }

    Surfnet\ServiceProviderDashboard\Legacy\Metadata\Parser:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Legacy\Metadata\CertificateParser'
            - '@Surfnet\ServiceProviderDashboard\Legacy\Repository\AttributesMetadataRepository'
            - '%kernel.root_dir%/Resources'
            - '@logger'

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Monolog\Formatter\JsonFormatter:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Monolog\Formatter\JsonFormatter

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\ContactRepository:
        factory: ['@doctrine', 'getRepository']
        arguments: [Surfnet\ServiceProviderDashboard\Domain\Entity\Contact]

    Surfnet\ServiceProviderDashboard\Legacy\Repository\AttributesMetadataRepository:
        arguments:  ['%kernel.root_dir%/Resources']

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\EntityRepository:
        factory: ['@doctrine', 'getRepository']
        arguments: [Surfnet\ServiceProviderDashboard\Domain\Entity\Entity]

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\PrivacyQuestionsRepository:
        factory: ['@doctrine', 'getRepository']
        arguments: [Surfnet\ServiceProviderDashboard\Domain\Entity\PrivacyQuestions]

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\ServiceRepository:
        factory: ['@doctrine', 'getRepository']
        arguments: [Surfnet\ServiceProviderDashboard\Domain\Entity\Service]

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Service\AuthorizationService:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Service\AuthorizationService
        arguments:
            $manageTestConfig: "@surfnet.manage.configuration.test"
            $manageProdConfig: "@surfnet.manage.configuration.production"

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Twig\ServiceSwitcherExtension:
        tags: [twig.extension]

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Twig\IdentityExtension:
        tags: [twig.extension]

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Twig\WysiwygExtension:
        tags: [twig.extension]

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\ValidEntityIdValidator:
        tags:
            - { name: validator.constraint_validator, alias: valid_entity_id }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\ValidClientIdValidator:
        tags:
            - { name: validator.constraint_validator, alias: valid_client_id }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\UniqueEntityIdValidator:
        arguments:
            - '@surfnet.manage.query_service'
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\EntityRepository'
        tags:
            - { name: validator.constraint_validator, alias: unique_entity_id }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\UniqueRedirectUrlsValidator:
        tags:
            - { name: validator.constraint_validator, alias: unique_redirect_urls }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\ValidRedirectUrlValidator:
        tags:
            - { name: validator.constraint_validator, alias: valid_redirect_url }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\ValidMetadataUrlValidator:
        tags:
            - { name: validator.constraint_validator, alias: metadata_url }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\ValidLogoValidator:
        arguments:  ['@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Service\CurlLogoValidationHelper']
        tags:
            - { name: validator.constraint_validator, alias: logo }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Service\CurlLogoValidationHelper:
        arguments:  ['@logger']

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\ValidAttributeValidator:
        tags:
            - { name: validator.constraint_validator, alias: attribute }

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Validator\Constraints\HasAttributesValidator:
        tags:
            - { name: validator.constraint_validator, alias: has_attributes }

    Surfnet\ServiceProviderDashboard\Application\Service\TicketService:
        arguments:
            - '@surfnet.dashboard.repository.issue'

    surfnet.dashboard.repository.issue:

    Surfnet\ServiceProviderDashboard\Application\Service\EntityService:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Application\Provider\EntityQueryRepositoryProvider'
            - '@Surfnet\ServiceProviderDashboard\Application\Service\TicketService'
            - '@surfnet.manage.configuration.test'
            - '@surfnet.manage.configuration.production'
            - '@router'
            - '@logger'
            - '%playground_uri_test%'
            - '%playground_uri_prod%'
            - '%oidcng_playground_uri_test%'
            - '%oidcng_playground_uri_prod%'

    Surfnet\ServiceProviderDashboard\Application\Service\LoadEntityService:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\EntityRepository'
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\QueryClient'
            - '@surfnet.manage.client.query_client.prod_environment'
            - '@Surfnet\ServiceProviderDashboard\Legacy\Repository\AttributesMetadataRepository'
            - '%playground_uri_test%'
            - '%playground_uri_prod%'
            - '%oidcng_playground_uri_test%'
            - '%oidcng_playground_uri_prod%'

    Surfnet\ServiceProviderDashboard\Application\Service\EntityAclService:
        arguments:
            - '@surfnet.manage.client.identity_provider_client.test_environment'

    Surfnet\ServiceProviderDashboard\Application\Provider\EntityQueryRepositoryProvider:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\EntityRepository'
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\QueryClient'
            - '@surfnet.manage.client.query_client.prod_environment'

    Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\PublishEntityClient:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Http\HttpClient'
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\QueryClient'
            - '@Surfnet\ServiceProviderDashboard\Application\Metadata\JsonGeneratorStrategy'
            - '@surfnet.manage.configuration.test'
            - '@logger'

    Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\QueryClient:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Http\HttpClient'

    Surfnet\ServiceProviderDashboard\Application\ViewObject\Manage\ConfigFactory:
        class: Surfnet\ServiceProviderDashboard\Application\ViewObject\Manage\ConfigFactory

    # For details, see the DasboardExtension.
    surfnet.manage.configuration.test:
        class: Surfnet\ServiceProviderDashboard\Application\ViewObject\Manage\Config

    surfnet.manage.configuration.production:
        class: Surfnet\ServiceProviderDashboard\Application\ViewObject\Manage\Config

    surfnet.manage.client.publish_client.prod_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\PublishEntityClient
        arguments:
        - '@surfnet.manage.http.http_client.prod_environment'
        - '@surfnet.manage.client.query_client.prod_environment'
        - '@Surfnet\ServiceProviderDashboard\Application\Metadata\JsonGeneratorStrategy'
        - '@surfnet.manage.configuration.production'
        - '@logger'

    surfnet.manage.client.query_client.prod_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\QueryClient
        arguments:
        - '@surfnet.manage.http.http_client.prod_environment'

    surfnet.manage.query_service:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Service\ManageQueryService
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\QueryClient'
            - '@surfnet.manage.client.query_client.prod_environment'

    surfnet.manage.publish_service:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Service\ManagePublishService
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\PublishEntityClient'
            - '@surfnet.manage.client.publish_client.prod_environment'

    Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Http\HttpClient:
        arguments:
            - '@surfnet.manage.http.guzzle.test_environment'
            - '@logger'

    surfnet.manage.client.delete_client.test_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\DeleteEntityClient
        arguments:
        - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Http\HttpClient'
        - '@logger'

    surfnet.manage.client.identity_provider_client.test_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\IdentityProviderClient
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Http\HttpClient'
            - '@surfnet.manage.configuration.test'

    surfnet.manage.client.delete_client.prod_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\DeleteEntityClient
        arguments:
        - '@surfnet.manage.http.http_client.prod_environment'
        - '@logger'

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Factory\ManageClientFactory:
        public: false

    surfnet.manage.http.guzzle.test_environment:
        class: GuzzleHttp\Client
        factory: "Surfnet\\ServiceProviderDashboard\\Infrastructure\\DashboardBundle\\Factory\\ManageClientFactory:createClient"
        arguments:
            - "@surfnet.manage.configuration.test"

    surfnet.manage.http.http_client.prod_environment:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Http\HttpClient
        arguments:
           - '@surfnet.manage.http.guzzle.prod_environment'
           - '@logger'
           - 'production'

    surfnet.manage.http.guzzle.prod_environment:
        class: GuzzleHttp\Client
        factory: "Surfnet\\ServiceProviderDashboard\\Infrastructure\\DashboardBundle\\Factory\\ManageClientFactory:createClient"
        arguments:
            - "@surfnet.manage.configuration.production"

    Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Factory\SaveCommandFactoryInterface:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Factory\SaveCommandFactory
        arguments:
            $oidcPlaygroundUriTest: '%playground_uri_test%'
            $oidcPlaygroundUriProd: '%playground_uri_prod%'

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Console\CleanOldProductionEntitiesCommand:
        class: Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Console\CleanOldProductionEntitiesCommand
        arguments:
          - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Repository\EntityRepository'
          - '@surfnet.manage.client.query_client.prod_environment'
        tags: ['console.command']

    Surfnet\ServiceProviderDashboard\Application\Command\Entity\DeleteCommandFactory:
        arguments:
            - '%jira_issue_type%'

    Surfnet\ServiceProviderDashboard\Infrastructure\Jira\Factory\IssueFieldFactory:
        arguments:
            - '%jira_issue_entityid_fieldname%'
            - '%jira_issue_manageid_fieldname%'
            - '%jira_issue_priority%'
            - '%jira_issue_project_key%'

    Surfnet\ServiceProviderDashboard\Infrastructure\Jira\Factory\JiraServiceFactory:
        arguments:
            - '%jira_host%'
            - '%jira_username%'
            - '%jira_password%'
            - '@logger'

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Form\Entity\AclListType:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Application\Service\EntityAclService'
        tags: ['form.type']

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Form\Entity\ProtocolChoiceFactory:
      arguments:
        - '@surfnet.manage.configuration.test'
        - '@surfnet.manage.configuration.production'

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Form\Service\ServiceSwitcherType:
      arguments:
        - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Service\AuthorizationService'
      tags: ['form.type']

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Form\Entity\OidcngEntityType:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Form\Entity\OidcngResourceServerOptionsFactory'
        tags: ['form.type']

    Surfnet\ServiceProviderDashboard\Infrastructure\DashboardBundle\Form\Entity\OidcngResourceServerOptionsFactory:
        arguments:
            - '@Surfnet\ServiceProviderDashboard\Infrastructure\Manage\Client\QueryClient'
            - '@surfnet.manage.client.query_client.prod_environment'
            - '%manage_test_publication_status%'
            - '%manage_prod_publication_status%'
